name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.9"

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=pycount_a5 --cov-report=xml

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: poetry run make html --directory docs/
  # cd:
  #   runs-on: ubuntu-latest
  #   permissions: 
  #     id-token: write
  #     contents: write
  #   needs: ci
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #     - name: check out repository
  #       uses: actions/checkout@v3
      
  #     - name: semantic release with github token
  #       id: release
  #       uses: python-semantic-release/python-semantic-release@v8.3.0
  #       with:
  #         github_token: ${{ secrets.GTOKEN }}

  #     - name: publish to TestPyPi
  #       if: steps.release.outputs.released == 'true'
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  #     - name: test download of package
  #       if: steps.release.outputs.released == 'true'
  #       run: |
  #         pip install \
  #           --index-url https://test.pypi.org/simple/ \
  #           --extra-index-url https://pypi.org/simple \
  #           pycount_a5

  #     - name: publish to PyPI
  #       if: steps.release.outputs.released == 'true'
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with: 
  #         password: ${{ secrets.PYPI_API_TOKEN }}

  #     - name: publish package distribution to github releases
  #       if: steps.release.outputs.released == 'true'
  #       uses: python-semantic-release/upload-to-gh-release@main
  #       with:
  #         github_token: ${{ secrets.GTOKEN }}
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9"

  #     - name: Check-out repository
  #       uses: actions/checkout@v3

  #     - name: Install poetry
  #       uses: snok/install-poetry@v1

  #     - name: Install package
  #       run: poetry install

  #     - name: Test with pytest
  #       run: poetry run pytest tests/ --cov=pycredits --cov-report=xml

  #     - name: Use Codecov to track coverage
  #       uses: codecov/codecov-action@v4
  #       with:
  #         fail_ci_if_error: true # optional (default = false)
  #         files: ./coverage.xml
  #         token: ${{ secrets.CODECOV_TOKEN }} # required

  #     - name: Build documentation
  #       run: poetry run make html --directory docs/

  cd:
    permissions:
      id-token: write
      contents: write
    
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Python Semantic Release to prepare release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.3.0
        with:
          github_token: ${{ secrets.GTOKEN }}

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Test install from TestPyPI
        if: steps.release.outputs.released == 'true'
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            pycredits

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GTOKEN }}

      
       





     
